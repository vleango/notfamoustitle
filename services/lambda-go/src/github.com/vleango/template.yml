AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: 'SAM template for Serverless framework service: '
Resources:
  Hello:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: hello
      Runtime: go1.x
      CodeUri: bin/
      MemorySize: 128
      Timeout: 3
      Events:
        Event1:
          Type: Api
          Properties:
            Path: /hello
            Method: get
            RestApiId:
              Ref: AwsGoDep
  AwsGoDep:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: dev
      DefinitionBody:
        swagger: '2.0'
        info:
          title:
            Ref: 'AWS::StackName'
        paths:
          /hello:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  'Fn::Sub': >-
                    arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Hello.Arn}/invocations
              responses: {}
          /world:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  'Fn::Sub': >-
                    arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${World.Arn}/invocations
              responses: {}
  HelloLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    DependsOn:
      - Hello
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        Ref: Hello
      Principal: apigateway.amazonaws.com
  World:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: world
      Runtime: go1.x
      CodeUri: bin/
      MemorySize: 128
      Timeout: 3
      Events:
        Event1:
          Type: Api
          Properties:
            Path: /world
            Method: get
            RestApiId:
              Ref: AwsGoDep
  WorldLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    DependsOn:
      - World
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        Ref: World
      Principal: apigateway.amazonaws.com
